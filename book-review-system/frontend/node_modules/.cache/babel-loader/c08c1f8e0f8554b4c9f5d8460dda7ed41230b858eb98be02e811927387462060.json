{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\ProjectMP\\\\book-review-system\\\\frontend\\\\src\\\\components\\\\ReviewForm\\\\ReviewForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewForm = ({\n  bookId,\n  onReviewSubmit\n}) => {\n  _s();\n  const [rating, setRating] = useState(1);\n  const [comment, setComment] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!comment) {\n      setError('Comment cannot be empty');\n      return;\n    }\n    const reviewData = {\n      bookId,\n      rating,\n      comment,\n      // Assuming you are using a static userId here for now\n      userId: 'user123' // This should be dynamically handled\n    };\n    try {\n      const response = await axios.post('/reviews/add', reviewData);\n      console.log('Review submitted:', response.data);\n      setComment('');\n      setRating(1);\n      if (onReviewSubmit) onReviewSubmit(); // Callback to refresh the reviews after submission\n    } catch (error) {\n      console.error('Failed to submit review:', error);\n      setError('Failed to submit review');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"review-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Leave a Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rating\",\n          children: \"Rating: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"rating\",\n          value: rating,\n          onChange: e => setRating(e.target.value),\n          required: true,\n          children: [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: star,\n            children: [star, \" Star(s)\"]\n          }, star, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"comment\",\n          children: \"Your Review: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"comment\",\n          value: comment,\n          onChange: e => setComment(e.target.value),\n          placeholder: \"Write your review here\",\n          required: true,\n          rows: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Submit Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewForm, \"WHvUu615cv9MIfJ55MQMjskco34=\");\n_c = ReviewForm;\nexport default ReviewForm;\nvar _c;\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ReviewForm","bookId","onReviewSubmit","_s","rating","setRating","comment","setComment","error","setError","handleSubmit","e","preventDefault","reviewData","userId","response","post","console","log","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","target","required","map","star","placeholder","rows","type","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/ProjectMP/book-review-system/frontend/src/components/ReviewForm/ReviewForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ReviewForm = ({ bookId, onReviewSubmit }) => {\r\n  const [rating, setRating] = useState(1);\r\n  const [comment, setComment] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!comment) {\r\n      setError('Comment cannot be empty');\r\n      return;\r\n    }\r\n\r\n    const reviewData = {\r\n      bookId,\r\n      rating,\r\n      comment,\r\n      // Assuming you are using a static userId here for now\r\n      userId: 'user123',  // This should be dynamically handled\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post('/reviews/add', reviewData);\r\n      console.log('Review submitted:', response.data);\r\n      setComment('');\r\n      setRating(1);\r\n      if (onReviewSubmit) onReviewSubmit();  // Callback to refresh the reviews after submission\r\n    } catch (error) {\r\n      console.error('Failed to submit review:', error);\r\n      setError('Failed to submit review');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"review-form-container\">\r\n      <h3>Leave a Review</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"rating\">Rating: </label>\r\n          <select \r\n            id=\"rating\" \r\n            value={rating} \r\n            onChange={(e) => setRating(e.target.value)} \r\n            required\r\n          >\r\n            {[1, 2, 3, 4, 5].map((star) => (\r\n              <option key={star} value={star}>{star} Star(s)</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"comment\">Your Review: </label>\r\n          <textarea\r\n            id=\"comment\"\r\n            value={comment}\r\n            onChange={(e) => setComment(e.target.value)}\r\n            placeholder=\"Write your review here\"\r\n            required\r\n            rows=\"4\"\r\n          />\r\n        </div>\r\n        \r\n        {error && <p className=\"error\">{error}</p>}\r\n        \r\n        <button type=\"submit\" className=\"submit-button\">Submit Review</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMc,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACN,OAAO,EAAE;MACZG,QAAQ,CAAC,yBAAyB,CAAC;MACnC;IACF;IAEA,MAAMI,UAAU,GAAG;MACjBZ,MAAM;MACNG,MAAM;MACNE,OAAO;MACP;MACAQ,MAAM,EAAE,SAAS,CAAG;IACtB,CAAC;IAED,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,cAAc,EAAEH,UAAU,CAAC;MAC7DI,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,QAAQ,CAACI,IAAI,CAAC;MAC/CZ,UAAU,CAAC,EAAE,CAAC;MACdF,SAAS,CAAC,CAAC,CAAC;MACZ,IAAIH,cAAc,EAAEA,cAAc,CAAC,CAAC,CAAC,CAAE;IACzC,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdS,OAAO,CAACT,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDC,QAAQ,CAAC,yBAAyB,CAAC;IACrC;EACF,CAAC;EAED,oBACEV,OAAA;IAAKqB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCtB,OAAA;MAAAsB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB1B,OAAA;MAAM2B,QAAQ,EAAEhB,YAAa;MAAAW,QAAA,gBAC3BtB,OAAA;QAAKqB,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBtB,OAAA;UAAO4B,OAAO,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxC1B,OAAA;UACE6B,EAAE,EAAC,QAAQ;UACXC,KAAK,EAAEzB,MAAO;UACd0B,QAAQ,EAAGnB,CAAC,IAAKN,SAAS,CAACM,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAE;UAC3CG,QAAQ;UAAAX,QAAA,EAEP,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACY,GAAG,CAAEC,IAAI,iBACxBnC,OAAA;YAAmB8B,KAAK,EAAEK,IAAK;YAAAb,QAAA,GAAEa,IAAI,EAAC,UAAQ;UAAA,GAAjCA,IAAI;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAqC,CACvD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAEN1B,OAAA;QAAKqB,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBtB,OAAA;UAAO4B,OAAO,EAAC,SAAS;UAAAN,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9C1B,OAAA;UACE6B,EAAE,EAAC,SAAS;UACZC,KAAK,EAAEvB,OAAQ;UACfwB,QAAQ,EAAGnB,CAAC,IAAKJ,UAAU,CAACI,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAE;UAC5CM,WAAW,EAAC,wBAAwB;UACpCH,QAAQ;UACRI,IAAI,EAAC;QAAG;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAELjB,KAAK,iBAAIT,OAAA;QAAGqB,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAEb;MAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE1C1B,OAAA;QAAQsC,IAAI,EAAC,QAAQ;QAACjB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACtB,EAAA,CArEIH,UAAU;AAAAsC,EAAA,GAAVtC,UAAU;AAuEhB,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}