{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\ProjectMPnew\\\\book-review-system\\\\frontend\\\\src\\\\pages\\\\AddReviewPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddReviewPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the book id from URL params\n  const [rating, setRating] = useState(0);\n  const [review, setReview] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Handle review form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate the input fields\n    if (rating < 1 || rating > 5) {\n      alert(\"Rating should be between 1 and 5.\");\n      return;\n    }\n    if (!review.trim()) {\n      alert(\"Review cannot be empty.\");\n      return;\n    }\n    try {\n      // Submit review to backend\n      const response = await axios.post(`http://localhost:5000/api/reviews`,\n      // Your backend API endpoint\n      {\n        bookId: id,\n        rating: rating,\n        review: review\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}` // Ensure token is passed if using JWT\n        }\n      });\n      if (response.data.success) {\n        // Redirect to book detail page after successful review submission\n        navigate(`/books/${id}`);\n      } else {\n        alert(\"Failed to submit review.\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting review:\", error);\n      alert(\"An error occurred while submitting the review.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-review-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Add Review for Book #\", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rating\",\n          children: \"Rating (1-5):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"rating\",\n          value: rating,\n          onChange: e => setRating(e.target.value),\n          min: \"1\",\n          max: \"5\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"review\",\n          children: \"Review:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"review\",\n          value: review,\n          onChange: e => setReview(e.target.value),\n          rows: \"5\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(AddReviewPage, \"jpLV8TKZVSWqFwnjRdru/mf41NQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AddReviewPage;\nexport default AddReviewPage;\nvar _c;\n$RefreshReg$(_c, \"AddReviewPage\");","map":{"version":3,"names":["React","useState","axios","useNavigate","useParams","jsxDEV","_jsxDEV","AddReviewPage","_s","id","rating","setRating","review","setReview","navigate","handleSubmit","e","preventDefault","alert","trim","response","post","bookId","headers","Authorization","localStorage","getItem","data","success","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","min","max","required","rows","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/ProjectMPnew/book-review-system/frontend/src/pages/AddReviewPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst AddReviewPage = () => {\r\n  const { id } = useParams(); // Get the book id from URL params\r\n  const [rating, setRating] = useState(0);\r\n  const [review, setReview] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  // Handle review form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validate the input fields\r\n    if (rating < 1 || rating > 5) {\r\n      alert(\"Rating should be between 1 and 5.\");\r\n      return;\r\n    }\r\n    if (!review.trim()) {\r\n      alert(\"Review cannot be empty.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Submit review to backend\r\n      const response = await axios.post(\r\n        `http://localhost:5000/api/reviews`, // Your backend API endpoint\r\n        {\r\n          bookId: id,\r\n          rating: rating,\r\n          review: review,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`, // Ensure token is passed if using JWT\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.data.success) {\r\n        // Redirect to book detail page after successful review submission\r\n        navigate(`/books/${id}`);\r\n      } else {\r\n        alert(\"Failed to submit review.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting review:\", error);\r\n      alert(\"An error occurred while submitting the review.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-review-container\">\r\n      <h2>Add Review for Book #{id}</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"rating\">Rating (1-5):</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"rating\"\r\n            value={rating}\r\n            onChange={(e) => setRating(e.target.value)}\r\n            min=\"1\"\r\n            max=\"5\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"review\">Review:</label>\r\n          <textarea\r\n            id=\"review\"\r\n            value={review}\r\n            onChange={(e) => setReview(e.target.value)}\r\n            rows=\"5\"\r\n            required\r\n          ></textarea>\r\n        </div>\r\n\r\n        <button type=\"submit\">Submit Review</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddReviewPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}